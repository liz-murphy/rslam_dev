#!/usr/bin/env python
PACKAGE = "optimization"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("adaptive_threshold", double_t, 0, "Adaptive threshold",0.1, 0.0, 1.0)
gen.add("damping_factor", double_t, 0, "Damping factor",1.0, 0.3, 5.0)
gen.add("error_increase_allowed", bool_t, 0, "Error increase allowed", False)
gen.add("do_dogleg", bool_t, 0, "Do dogleg", True)
gen.add("imu_weight", double_t,    0, "Imu weight", 1e-3,  1e-4, 1e-2)
gen.add("imu_prior", double_t,    0, "Imu prior", 10.0,  5.0, 20.0)
gen.add("trust_region_init_size", double_t,    0, "Trust region initial size", 5.0,  2.0, 10.0)
gen.add("min_frames_for_imu", int_t, 0, "Minimum frames for IMU", 15,  5, 40)
gen.add("gyro_sigma", double_t, 0, "IMU Gyro sigma", 5.3088444e-5,  1e-6, 1e-4)
gen.add("gyro_bias_sigma", double_t, 0, "IMU Gyro bias sigma", 1.4125375e-4,  1e-5, 1e-3)
gen.add("do_imu_conditioning", bool_t, 0, "Do imu conditioning", True)
gen.add("accel_sigma", double_t, 0, "IMU Accelerometer sigma", 0.001883649, 1e-4, 1e-2)
gen.add("accel_bias_sigma", double_t, 0, "IMU Accelerometer bias sigma", 1.2589254e-2, 1e-3, 1e-1)
gen.add("min_lm_observations", int_t, 0, "Minimum landmark observations", 3,  1, 20)
gen.add("adaptive_depth_increase", int_t, 0, "Adaptive depth increase (in frames)", 30,  10, 50)
gen.add("imu_visualization_time_extra", double_t, 0, "IMU Visualization time allowance", 0.3, 0.1, 1.0)

exit(gen.generate(PACKAGE, "optimization", "OptimizationParams"))
